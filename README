--------------------------------
| UJUG OSGI Virgo Example Code |
--------------------------------

This directory contains the following projects:

conf
  Configuration files for Virgo Deployment

dictionary-api
  API for the Dictionary Service Example

dictionary-english
  English Implementation of the Dictionary Service

dictionary-korean
  Korean Implementation of the Dictionary Service

dictionary-war
  Dictionary Service Web Application

-----------
| Prereqs |
-----------

1)  Java 1.6
2)  Maven 3.0.2
3)  IMPORTANT:  Copy the settings.xml file to $MAVEN_HOME
    (see below)

----------------------
| Build Instructions |
----------------------

1)  Get Maven 3.0.2.

2)  Copy settings.xml to $HOME/.m2
    - Back up the one you have first!

3)  Run Maven.
    - 'mvn clean package'


-----------------------------
| Quick Deploy Instructions |
-----------------------------

From the ujug-20110519 directory run:

1) 'make deploy'

2) ./deploy/virgo-web-server-2.1.1.RELEASE/bin/startup.sh -clean

3) Point your browser to:  http://localhost:8080/dictionary

--------------------------------------
| Deploy Instructions - Long Version |
--------------------------------------


1)  Get Virgo Web 2.1.0, unzip it.
  - http://www.eclipse.org/downloads/download.php?file=/virgo/release/VWS/2.1.1.RELEASE/virgo-web-server-2.1.1.RELEASE.zip

2)  Copy bundles from targets into $VIRGO_HOME/pickup
  - cp dictionary-war/target/dictionary-war*.war deploy/virgo-web-server-2.1.1.RELEASE/pickup/
  - ... repeat for each dictionary-* project ...

3)  Start Virgo
  - ./bin/startup.sh -clean

(Optional / Informational)
4)  Start Virgo in DEBUG mode:
  - ./bin/startup.sh -clean -debug <port>

---------
| Notes |
---------

While hooking a web application to Eclipse Virgo is pretty straight forward,
integrating spring-mvc or spring-ws involves quite a bit of bundle / manifest
information.  This is especially true of spring-ws or any java classes which
use extensive annotation scanners, thread context loaders, or other class path
tricks.

Deploy scripts are currently built for a unix, linux, os x, environment.  This
does not preclude the possibility however that these examples be deployed into
a microsoft windows system.

Please contact [Randy Secrist](http://randysecrist.github.com/) for more info.
